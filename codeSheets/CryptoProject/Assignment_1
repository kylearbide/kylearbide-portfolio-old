{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Homework 1 - Kyle Arbide","provenance":[],"authorship_tag":"ABX9TyPFgN6ehOut+uegxtPV0FTm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"wmz9V5flV7zu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1631300981523,"user_tz":240,"elapsed":19,"user":{"displayName":"Kyle Arbide","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"03321951237030975999"}},"outputId":"0d7e6d13-08d0-45d2-a685-d42c2a839e76"},"source":["#Import student_database\n","student_database = [\n","                    {'name':'john doe','id': 12345, 'courses':[\"MTH1\",\"MTH2\"]},\n","                     {'name':'jane doe','id': 44444, 'courses':[\"ENG1\",\"ENG2\"]},\n","                    {'name':'moe doe','id': 45674, 'courses':[\"ENG1\"]}\n","]\n","print(student_database)\n"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["[{'name': 'john doe', 'id': 12345, 'courses': ['MTH1', 'MTH2']}, {'name': 'jane doe', 'id': 44444, 'courses': ['ENG1', 'ENG2']}, {'name': 'moe doe', 'id': 45674, 'courses': ['ENG1']}]\n"]}]},{"cell_type":"code","metadata":{"id":"D39RmOgKdG2d"},"source":["# Register a new student\n","def register(new_name,new_id):\n","  new_id = int(new_id)    #changes the string to an integer so all the id's are in the same format\n","  student_list = [value for elem in student_database\n","                  for value in elem.values()]\n","  if new_id in student_list:                     #Checks to see if the inputed ID is in database\n","    print(\"This ID is already in the database\")\n","  else:            \n","    if new_id < 10000:                        # checks to see if inputed ID is 5 digits\n","      print(\"Id must be 5 digits\")\n","    elif new_id > 99999:\n","      print(\"Id must be 5 digits\")\n","    else:\n","      new_student = {'name':new_name,'id': new_id}\n","      student_database.append(new_student)\n","\n","\n","register(\"Kyle\",10000)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7G8DoJF_i5jn"},"source":["# Find and print student record by name\n","\n","def find_student(stu_name):\n","  student_list = [value for elem in student_database\n","                  for value in elem.values()]\n","  if stu_name in student_list:            #Checks to see if the inputed name is in database\n","    for x in student_database: \n","      if x[\"name\"] == stu_name:\n","        if 'courses' in x:                #Checks to see if student is registered for any courses\n","          print(\"id:\",x['id'])\n","          print(\"courses:\",x['courses'])\n","        else:\n","          print(\"id:\",x['id'])\n","          print('Student is not registered for any courses')\n","  else:\n","    print(\"Student is not in the database\")\n","find_student(\"john doe\")\n","\n","# stu_name is currently case sensitive"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"axVFZSdRkGjt","executionInfo":{"status":"ok","timestamp":1631301203552,"user_tz":240,"elapsed":313,"user":{"displayName":"Kyle Arbide","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"03321951237030975999"}}},"source":["# Register a student for class\n","def add_class(stu_id,new_class):\n","  stu_id = int(stu_id)\n","  student_list = [value for elem in student_database\n","                  for value in elem.values()]\n","  if stu_id in student_list:            #Checks to see if the inputed id is in database\n","    for x in student_database: \n","      if x[\"id\"] == stu_id:\n","        if 'courses' in x:                  #Different operations based on if the student was or wasnt registered for any other classes\n","          if new_class in x['courses']:     # Checks if student is already registered for this course\n","            print(\"Student is already registered for this course\")\n","          else:\n","            x['courses'].append(new_class)\n","        else:\n","          x['courses'] = [new_class]\n","  else:\n","    print(\"ID is not in the database\")\n","add_class(\"10000\",\"ABC2\")\n","\n","#new_class is currently case sensitive"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"qhZzzL-_yR5O","executionInfo":{"status":"ok","timestamp":1631301283014,"user_tz":240,"elapsed":357,"user":{"displayName":"Kyle Arbide","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"03321951237030975999"}}},"source":["# Drop a student from a class\n","def drop(stu_id,drop_class):\n","  stu_id = int(stu_id)\n","  student_list = [value for elem in student_database\n","                  for value in elem.values()]\n","  if stu_id in student_list:            #Checks to see if the inputed id is in database\n","    for x in student_database: \n","      if x[\"id\"] == stu_id:\n","        if 'courses' in x:              #Checks to see if the student is registered for any courses\n","          if drop_class in x['courses']:        #Checks if student is in the class that was requested to drop\n","            x['courses'].remove(drop_class)\n","          else:\n","            print(\"Student is not registered for this class\")\n","        else:\n","           print(\"Student is not registered for any courses\")\n","  else:\n","    print(\"ID is not in the database\")\n","drop(10000,\"ABC2\")\n","\n","# drop_class is currently case sensitive"],"execution_count":20,"outputs":[]}]}